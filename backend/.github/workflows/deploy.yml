name: Deploy EbookVoice AI Backend

on:
  push:
    branches: [ main, production ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-flask
    
    - name: Run tests
      working-directory: ./backend
      run: |
        pytest tests/ -v || echo "No tests found - skipping"
    
    - name: Test health endpoint
      working-directory: ./backend
      run: |
        python -c "
        from app import create_app
        app = create_app('testing')
        with app.test_client() as client:
            response = client.get('/health')
            assert response.status_code == 200
            print('‚úÖ Health check passed')
        "

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment"
        # Add your staging deployment commands here
        # Example: Deploy to Heroku, Railway, DigitalOcean, etc.

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
      run: |
        echo "üöÄ Deploying to production environment"
        # Add your production deployment commands here
        
        # Example for Docker-based deployment:
        # docker build -t ebookvoice-backend ./backend
        # docker tag ebookvoice-backend your-registry/ebookvoice-backend:latest
        # docker push your-registry/ebookvoice-backend:latest
        
        # Example for cloud deployment:
        # gcloud run deploy ebookvoice-backend --image your-registry/ebookvoice-backend:latest
        
    - name: Health check production
      run: |
        echo "üè• Performing production health check"
        # curl -f https://your-production-domain.com/health